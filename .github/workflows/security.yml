name: Security Analysis

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python, csharp

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  container-security:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, processor, lakepublisher]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Image
        run: |
          docker build -t ${{ matrix.service }}:test ./packages/${{ matrix.service }} --target production

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.service }}:test
          format: sarif
          output: trivy-${{ matrix.service }}.sarif

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-${{ matrix.service }}.sarif
          category: container-${{ matrix.service }}

  kubernetes-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: latest

      - name: Run Kubesec scan on K8s manifests
        run: |
          wget https://github.com/controlplaneio/kubesec/releases/latest/download/kubesec_linux_amd64.tar.gz
          tar -xzf kubesec_linux_amd64.tar.gz
          chmod +x kubesec
          
          # Scan Kubernetes manifests
          for file in devops/kubernetes/*.yaml; do
            if [[ "$file" != *"secrets.yaml"* ]] && [[ "$file" != *"configmaps.yaml"* ]] && [[ "$file" != *"namespace.yaml"* ]]; then
              echo "Scanning $file"
              ./kubesec scan "$file" > "kubesec-$(basename $file .yaml).json" || echo "Warning: Kubesec scan failed for $file"
            fi
          done

      - name: Run Helm security scan
        run: |
          # Template Helm chart and scan
          helm template expenses devops/helm/ > helm-templated.yaml
          ./kubesec scan helm-templated.yaml > kubesec-helm.json

      - name: Upload security scan results
        uses: actions/upload-artifact@v4
        with:
          name: kubernetes-security-results
          path: kubesec-*.json

  security-summary:
    runs-on: ubuntu-latest
    needs: [static-analysis, container-security, kubernetes-security]
    if: always()
    steps:
      - name: Security Summary
        run: |
          echo "## ðŸ”’ Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Static Code Analysis (CodeQL)" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Container Vulnerability Scanning (Trivy)" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… Kubernetes Security Analysis (Kubesec)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the Security tab for detailed findings." >> $GITHUB_STEP_SUMMARY
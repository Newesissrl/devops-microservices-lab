# Helm Chart Secrets (SOPS Encrypted)
# This file contains sensitive values that should not be stored in plain text
# To decrypt: sops -d secrets.yaml
# To edit: sops secrets.yaml

# Database Credentials
database:
  password: "secure-db-password-123"
  rootPassword: "root-secure-password-456"

# Application Secrets
backend:
  jwtSecret: "jwt-secret-key-2024-secure"
  apiToken: "lakepublisher-token-2024"

# External Service Credentials
rabbitmq:
  auth:
    username: "admin"
    password: "rabbitmq-secure-password-789"
    erlangCookie: "erlang-cookie-secret-abc"

# Monitoring and Observability
monitoring:
  apiKey: "monitoring-api-key-xyz"
  webhookUrl: "https://hooks.slack.com/services/SECRET/WEBHOOK/URL"

# Encryption Keys
encryption:
  dataKey: "data-encryption-key-256bit-secure"
  sessionKey: "session-encryption-key-128bit"

# External API Keys
externalServices:
  s3AccessKey: "AKIA-S3-ACCESS-KEY-EXAMPLE"
  s3SecretKey: "s3-secret-access-key-example-secure"

# Note: This is a template - actual file should be encrypted with SOPS
# Run: sops -e -i secrets.yaml to encrypt this file
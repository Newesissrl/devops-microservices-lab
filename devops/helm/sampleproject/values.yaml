# Default values for sampleproject.

global:
  replicaCount: 1
  image:
    tag: phase1-containers
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: expenses

imagePullSecrets:
  name: ghcr-secret
  dockerconfigjson: |
    {"auths":{"ghcr.io":{"username":"raunodepasquale","password":"ghp_1RWjVPYHnNGtng9GwEazA5Cx8wx79C3zMKKu","auth":"cmF1bm9kZXBhc3F1YWxlOmdocF8xUldqVlBZSG5uR3RuZzlHd0VhekE1Q3g4d3g3OUMzek1LS3U="}}}

backend:
  replicaCount: 1
  image:
    repository: ghcr.io/newesissrl/devops-microservices-lab/backend
    tag: phase1-containers
  service:
    name: backend-service
    type: ClusterIP
    port: 3000
    targetPort: 3000
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  readinessProbe:
    httpGet:
      path: /
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
  uploadPath: "./uploads"
  jwtSecret: "expenses-secret-key-2024"
  auth:
    users:
    - username: "admin"
      password: "admin123"
    - username: "user"
      password: "user123"
    tokens:
    - "lakepublisher-token-2024"

frontend:
  replicaCount: 1
  image:
    repository: ghcr.io/newesissrl/devops-microservices-lab/frontend
    tag: phase1-containers
  service:
    name: frontend-service
    type: LoadBalancer
    port: 80
    targetPort: 80
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  readinessProbe:
    httpGet:
      path: /
      port: 80
    initialDelaySeconds: 10
    periodSeconds: 5

lakepublisher:
  schedule: "0 2 * * *"
  image:
    repository: ghcr.io/newesissrl/devops-microservices-lab/lakepublisher
    tag: phase1-containers
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  targetStatus: "Approved"
  basePath: "/app/data"

mongodb:
  replicaCount: 1
  image:
    repository: mongo
    tag: 7
  service:
    name: mongodb-service
  database: expenses
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  readinessProbe:
    exec:
      command: ["mongosh", "--eval", "db.adminCommand('ping')"]
    initialDelaySeconds: 60
    periodSeconds: 60
  persistence:
    size: 10Gi

processor:
  replicaCount: 1
  image:
    repository: ghcr.io/newesissrl/devops-microservices-lab/processor
    tag: phase1-containers
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "100m"
  readinessProbe:
    exec:
      command: ["python", "-c", "import pika; exit(0)"]
    initialDelaySeconds: 30
    periodSeconds: 10
  outputFolder: "/app/messages"

rabbitmq:
  replicaCount: 1
  image:
    repository: rabbitmq
    tag: 3-management-alpine
  service:
    name: rabbitmq-service
  user: admin
  password: admin123
  vhost: "/"
  exchange: "expenses_exchange"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  readinessProbe:
    exec:
      command: ["rabbitmq-diagnostics", "ping"]
    initialDelaySeconds: 60
    periodSeconds: 60
  persistence:
    size: 5Gi
